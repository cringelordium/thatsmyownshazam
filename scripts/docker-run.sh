#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ MyShazam –≤ Docker

set -e

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏
show_help() {
    echo "üê≥ MyShazam Docker Runner"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  gui        –ó–∞–ø—É—Å–∫ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  cli        –ó–∞–ø—É—Å–∫ CLI —Ä–µ–∂–∏–º–∞"
    echo "  dev        –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    echo "  prod       –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ"
    echo "  test       –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
    echo "  example    –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞"
    echo "  add        –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Å–µ–Ω –∏–∑ audio_files/"
    echo "  recognize  –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –ø–µ—Å–µ–Ω –∏–∑ audio_files/"
    echo "  list       –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω"
    echo "  stop       –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "  clean      –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã"
    echo "  help       –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É –ø–æ–º–æ—â—å"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 gui     # –ó–∞–ø—É—Å–∫ GUI"
    echo "  $0 cli     # –ó–∞–ø—É—Å–∫ CLI"
    echo "  $0 test    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ GUI
run_gui() {
    echo "üéµ –ó–∞–ø—É—Å–∫ MyShazam GUI..."
    docker-compose -f docker-compose.yml -f docker-compose.gui.yml up
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ CLI
run_cli() {
    echo "üéµ –ó–∞–ø—É—Å–∫ MyShazam CLI..."
    docker-compose -f docker-compose.yml -f docker-compose.cli.yml up
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
run_dev() {
    echo "üéµ –ó–∞–ø—É—Å–∫ MyShazam –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
    docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
run_prod() {
    echo "üéµ –ó–∞–ø—É—Å–∫ MyShazam –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ..."
    docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
run_test() {
    echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
    docker-compose -f docker-compose.yml -f docker-compose.cli.yml run --rm myshazam-test
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–º–µ—Ä–∞
run_example() {
    echo "üìö –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞..."
    docker-compose -f docker-compose.yml -f docker-compose.cli.yml run --rm myshazam-example
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Å–µ–Ω
run_add() {
    echo "‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Å–µ–Ω..."
    docker-compose -f docker-compose.yml -f docker-compose.cli.yml run --rm myshazam-add-songs
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
run_recognize() {
    echo "üîç –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –ø–µ—Å–µ–Ω..."
    docker-compose -f docker-compose.yml -f docker-compose.cli.yml run --rm myshazam-recognize
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –ø–µ—Å–µ–Ω
run_list() {
    echo "üìã –°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω..."
    docker-compose -f docker-compose.yml -f docker-compose.cli.yml run --rm myshazam-list
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
run_stop() {
    echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose down
    docker-compose -f docker-compose.yml -f docker-compose.gui.yml down
    docker-compose -f docker-compose.yml -f docker-compose.cli.yml down
    docker-compose -f docker-compose.yml -f docker-compose.dev.yml down
    docker-compose -f docker-compose.yml -f docker-compose.prod.yml down
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
run_clean() {
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker..."
    docker-compose down --rmi all --volumes --remove-orphans
    docker system prune -f
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    gui)
        run_gui
        ;;
    cli)
        run_cli
        ;;
    dev)
        run_dev
        ;;
    prod)
        run_prod
        ;;
    test)
        run_test
        ;;
    example)
        run_example
        ;;
    add)
        run_add
        ;;
    recognize)
        run_recognize
        ;;
    list)
        run_list
        ;;
    stop)
        run_stop
        ;;
    clean)
        run_clean
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        echo ""
        show_help
        exit 1
        ;;
esac
